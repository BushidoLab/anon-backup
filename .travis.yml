# # errata:
# # - A travis bug causes caches to trample eachother when using the same
# #   compiler key (which we don't use anyway). This is worked around for now by
# #   replacing the "compilers" with a build name prefixed by the no-op ":"
# #   command. See: https://github.com/travis-ci/casher/issues/6

# os: linux
# language: cpp
# compiler: gcc
# env:
#   global:
#     - MAKEJOBS=-j3
#     - RUN_TESTS=false
#     - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
#     - CCACHE_SIZE=100M
#     - CCACHE_TEMPDIR=/tmp/.ccache-temp
#     - CCACHE_COMPRESS=1
#     - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
#     - SDK_URL=https://bitcoincore.org/depends-sources/sdks
#     - PYTHON_DEBUG=1
#     - WINEDEBUG=fixme-all
# cache:
#   apt: true
#   directories:
#   - depends/built
#   - depends/sdk-sources
#   - $HOME/.ccache
# matrix:
#   fast_finish: true
#   include:
#     # - compiler: ": ARM"
#     #   env: HOST=arm-linux-gnueabihf PACKAGES="g++-arm-linux-gnueabihf" DEP_OPTS="NO_QT=1" GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
#     # - compiler: ": Win32"
#     #   env: HOST=i686-w64-mingw32 PACKAGES="nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine bc" RUN_TESTS=true GOAL="deploy" BITCOIN_CONFIG="--enable-reduce-exports" MAKEJOBS="-j2"
#     # - compiler: ": 32-bit + dash"
#     #   env: HOST=i686-pc-linux-gnu PACKAGES="g++-multilib bc python-zmq" PPA="ppa:chris-lea/zeromq" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++" USE_SHELL="/bin/dash"
#     # - compiler: ": Win64"
#     #   env: HOST=x86_64-w64-mingw32 PACKAGES="nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine bc" RUN_TESTS=true GOAL="deploy" BITCOIN_CONFIG="--enable-reduce-exports" MAKEJOBS="-j2"
#     - compiler: ": bitcoind"
#       env: HOST=x86_64-unknown-linux-gnu PACKAGES="libtool bc python-zmq libboost-all-dev" PPA="ppa:chris-lea/zeromq" DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER"
#     # - compiler: ": No wallet"
#     #   env: HOST=x86_64-unknown-linux-gnu DEP_OPTS="NO_WALLET=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
#     - compiler: ": Cross-Mac"
#       env: HOST=x86_64-apple-darwin11 PACKAGES="cmake libcap-dev libz-dev libbz2-dev" BITCOIN_CONFIG="--enable-reduce-exports" OSX_SDK=10.9 GOAL="deploy"
#   exclude:
#     - compiler: gcc
# install:
#     - if [ -n "$PACKAGES" ]; then sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list; fi
#     - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
#     - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi
# before_script:
#     - unset CC; unset CXX
#     - mkdir -p depends/SDKs depends/sdk-sources
#     - if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then wget $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -O depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
#     - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
#     - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
# script:
#     - if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
#     - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
#     - BITCOIN_CONFIG_ALL="--prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
#     - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
#     - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export CCACHE_READONLY=1; fi
    # - test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
#     - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
#     - make distdir PACKAGE=bitcoin VERSION=$HOST
#     - cd bitcoin-$HOST
#     - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
#     - make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL V=1 ; false )
#     # - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
#     - if [ "$RUN_TESTS" = "true" ]; then make check; fi
#     - if [ "$RUN_TESTS" = "true" ]; then qa/pull-tester/rpc-tests.sh; fi
# after_script:
#     - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then (echo "Upload goes here. Something like: scp -r $BASE_OUTDIR server" || echo "upload failed"); fi


dist: trusty
os: linux
language: minimal
cache:
  apt: true
  directories:
  - depends/built
  - depends/sdk-sources
  - $HOME/.ccache
env:
  global:
    - MAKEJOBS=-j3
    - RUN_TESTS=false
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=100M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://bitcoincore.org/depends-sources/sdks
    - PYTHON_DEBUG=1
    - WINEDEBUG=fixme-all
matrix:
  # x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)
    - HOST=x86_64-unknown-linux-gnu PACKAGES="python-zmq protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev" DEP_OPTS="NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER"
# Qt4 & system libs
    - HOST=x86_64-unknown-linux-gnu PACKAGES="python-zmq libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev xvfb" NO_DEPENDS=1 RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER"
install:
    - env | grep -E '^(CCACHE_|WINEDEBUG|DISPLAY|BOOST_TEST_RANDOM|CONFIG_SHELL)' | tee /tmp/env
    # - DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$TRAVIS_BUILD_DIR,dst=$TRAVIS_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $TRAVIS_BUILD_DIR --env-file /tmp/env ubuntu:18.04)
    # - DOCKER_EXEC () { docker exec $DOCKER_ID bash -c "cd $PWD && $*"; }
    - cd $PWD && $*
    - travis_retry apt-get update
    - travis_retry apt-get install --no-install-recommends --no-upgrade -qq
before_script:
    - mkdir -p depends/SDKs depends/sdk-sources
    - if [ -z "$NO_DEPENDS" ]; then CONFIG_SHELL= make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi   

script:
    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`
    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
    - BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
    - if [ -z "$NO_DEPENDS" ]; then ccache --max-size=$CCACHE_SIZE; fi
    - test -n "$CONFIG_SHELL" && "$CONFIG_SHELL" -c "./autogen.sh" || ./autogen.sh
    - mkdir build && cd build
    - ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make distdir VERSION=$HOST
    - cd bitcoin-$HOST
    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL V=1 ; false )
    - if [ "$RUN_TESTS" = "true" ]; then LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1; fi
    - if [ "$TRAVIS_EVENT_TYPE" = "cron" ]; then extended="--extended --exclude feature_pruning,feature_dbcrash"; fi
    - if [ "$RUN_TESTS" = "true" ]; then qa/pull-tester/rpc-tests.sh ${extended}; fi
after_script:
    - echo $TRAVIS_COMMIT_RANGE
    - echo $TRAVIS_COMMIT_LOG
